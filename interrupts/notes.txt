Real mode uses BIOs itns
PM uses our IDT
IDT has 256 entries -> array of function pointers

CPU gets int num -> num * 8 = to find entry in IDT

use lidt instr after lgdt instr before we go to protected mode

- Location of IDT stored in idtr register, loaded into this register using lidt instruction 
- lidt instruction takes pointer to IDT as arg

IDT Entry:
- Segment: should point to code segment of GDT (0x8000)
- Offset: 32-bit addr of INT handler, split into lower and higher
- Flags:
    - Gate Type: 4 bits dedicated to specifying the gate Type
        - Gate Types:
            - 
    - DPL: 2 bits dedicated to specificying privilege level to trigger this interrupt
    - Present Bit: 1 bit, must be set to be valid

struct InterruptDescriptor32 {
   uint16_t offset_1;        // offset bits 0..15
   uint16_t selector;        // a code segment selector in GDT or LDT
   uint8_t  zero;            // unused, set to 0
   uint8_t  type_attributes; // gate type, dpl, and p fields
   uint16_t offset_2;        // offset bits 16..31
}; 
